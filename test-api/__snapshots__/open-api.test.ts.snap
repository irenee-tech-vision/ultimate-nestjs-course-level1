// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Habits Tracker API OpenAPI json spec matches the snapshot 1`] = `
{
  "components": {
    "schemas": {
      "CreateHabitDto": {
        "properties": {
          "description": {
            "description": "Description of the habit",
            "example": "Drink at least 2 liters of water daily",
            "type": "string",
          },
          "name": {
            "description": "Name of the habit",
            "example": "Drink water",
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "type": "object",
      },
      "CreateUserDto": {
        "properties": {
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
          },
          "email": {
            "format": "email",
            "type": "string",
          },
          "firstName": {
            "type": "string",
          },
          "lastName": {
            "type": "string",
          },
          "password": {
            "minLength": 8,
            "type": "string",
          },
          "username": {
            "type": "string",
          },
        },
        "required": [
          "username",
          "email",
          "password",
        ],
        "type": "object",
      },
      "Habit": {
        "description": "A habit entity representing a personal habit to track",
        "properties": {
          "description": {
            "description": "Description of the habit",
            "example": "Drink at least 2 liters of water daily",
            "type": "string",
          },
          "id": {
            "description": "Unique identifier for the habit",
            "example": 1,
            "type": "number",
          },
          "name": {
            "description": "Name of the habit",
            "example": "Drink water",
            "type": "string",
          },
        },
        "required": [
          "id",
          "name",
        ],
        "type": "object",
      },
      "HabitsSortByField": {
        "enum": [
          "name",
          "id",
        ],
        "type": "string",
      },
      "UpdateHabitDto": {
        "properties": {
          "description": {
            "description": "Description of the habit",
            "example": "Drink at least 2 liters of water daily",
            "type": "string",
          },
          "name": {
            "description": "Name of the habit",
            "example": "Drink water",
            "type": "string",
          },
        },
        "type": "object",
      },
      "UpdateUserDto": {
        "properties": {
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
          },
          "email": {
            "format": "email",
            "type": "string",
          },
          "firstName": {
            "type": "string",
          },
          "lastName": {
            "type": "string",
          },
          "password": {
            "minLength": 8,
            "type": "string",
          },
          "username": {
            "type": "string",
          },
        },
        "type": "object",
      },
      "UserDto": {
        "properties": {
          "dateOfBirth": {
            "description": "The user's date of birth.",
            "example": "1990-01-01T00:00:00.000Z",
            "format": "date-time",
            "type": "string",
          },
          "email": {
            "description": "The user's email address.",
            "example": "johndoe@example.com",
            "type": "string",
          },
          "firstName": {
            "description": "The user's first name.",
            "example": "John",
            "type": "string",
          },
          "id": {
            "description": "Unique identifier for the user.",
            "example": 1,
            "type": "number",
          },
          "lastName": {
            "description": "The user's last name.",
            "example": "Doe",
            "type": "string",
          },
          "username": {
            "description": "The user's username.",
            "example": "johndoe",
            "type": "string",
          },
        },
        "required": [
          "id",
          "username",
          "email",
        ],
        "type": "object",
      },
      "UserLoginDto": {
        "properties": {
          "password": {
            "type": "string",
          },
          "username": {
            "type": "string",
          },
        },
        "required": [
          "username",
          "password",
        ],
        "type": "object",
      },
      "UserLoginSuccessDto": {
        "properties": {
          "accessToken": {
            "type": "string",
          },
        },
        "required": [
          "accessToken",
        ],
        "type": "object",
      },
    },
    "securitySchemes": {
      "admin": {
        "in": "header",
        "name": "x-api-key",
        "type": "apiKey",
      },
      "bearer": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http",
      },
    },
  },
  "info": {
    "contact": {},
    "description": "API that helps users track their habits",
    "title": "Habits Tracker API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                },
              },
            },
            "description": "",
          },
        },
        "tags": [
          "App",
        ],
      },
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginSuccessDto",
                },
              },
            },
            "description": "",
          },
        },
        "tags": [
          "Auth",
        ],
      },
    },
    "/habits": {
      "get": {
        "description": "Retrieves a list of all habits with optional pagination and sorting.",
        "operationId": "HabitsController_findAll",
        "parameters": [
          {
            "description": "Limit the number of habits returned",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "number",
            },
          },
          {
            "description": "Sort habits by a specific field",
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/HabitsSortByField",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Habit",
                  },
                  "type": "array",
                },
              },
            },
            "description": "A list of habits",
          },
        },
        "security": [
          {
            "bearer": [],
          },
        ],
        "summary": "Get all habits",
        "tags": [
          "habits-",
        ],
      },
      "post": {
        "operationId": "HabitsController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHabitDto",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Habit",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "bearer": [],
          },
        ],
        "tags": [
          "habits-",
        ],
      },
    },
    "/habits/{id}": {
      "delete": {
        "operationId": "HabitsController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "204": {
            "description": "",
          },
        },
        "security": [
          {
            "bearer": [],
          },
        ],
        "tags": [
          "habits-",
        ],
      },
      "get": {
        "operationId": "HabitsController_findOne",
        "parameters": [
          {
            "description": "The unique habit identifier",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Habit",
                },
              },
            },
            "description": "The habit matching the id",
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Not Found",
                  "message": "Habits with id 1 not found",
                  "statusCode": 404,
                },
              },
            },
            "description": "Habits is not found",
          },
        },
        "security": [
          {
            "bearer": [],
          },
        ],
        "tags": [
          "habits-",
        ],
      },
      "patch": {
        "operationId": "HabitsController_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHabitDto",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Habit",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "bearer": [],
          },
        ],
        "tags": [
          "habits-",
        ],
      },
    },
    "/users": {
      "get": {
        "description": "This operation allows you to retrieve a list of all users with optional sorting and limiting.",
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "schema": {
              "enum": [
                "userId",
                "username",
                "email",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "number",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserDto",
                  },
                  "type": "array",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "admin": [],
          },
        ],
        "summary": "Retrieves a list of all users",
        "tags": [
          "Users",
        ],
      },
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "admin": [],
          },
        ],
        "tags": [
          "Users",
        ],
      },
    },
    "/users/{id}": {
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
            },
          },
        ],
        "responses": {
          "204": {
            "description": "",
          },
        },
        "security": [
          {
            "admin": [],
          },
        ],
        "tags": [
          "Users",
        ],
      },
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto",
                },
              },
            },
            "description": "",
          },
          "404": {
            "description": "NotFoundException if the user with the specified ID does not exist",
          },
        },
        "security": [
          {
            "admin": [],
          },
        ],
        "summary": "Finds a user by their ID",
        "tags": [
          "Users",
        ],
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "admin": [],
          },
        ],
        "tags": [
          "Users",
        ],
      },
    },
  },
  "servers": [],
  "tags": [],
}
`;
